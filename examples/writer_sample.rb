module Cheatorious
  module Writer    
    # This is an example of a Writer
    #
    # To implement your own Writer, just create a class inside 
    # Cheatorious::Writer module and implement the interface 
    # represented by the public methods below.
    class WriterSample
      def initialize
        @section_stack = []
        @result        = ""
      end
      
      def header(name, author = "", version = "", description = "")
        line
        line "-" * 80
        line "#{name} (#{version})"
        line
        line "Author     : #{author[0]} (#{author[1]})"
        line "Description: #{description}"
        line "-" * 80
        line
      end
      
      def search_header(query, results_count, options)
        search_type = options.keys.join(", ")
        search_type += " " if search_type.size > 0
        line
        line "Your #{search_type}search for '#{query}' returned #{results_count} #{results_count > 1 ? "results" : "result"}:" if results_count != 0
        line "Your #{search_type}search for '#{query}' doesn't returned any result. Try with another keyword." if results_count == 0
        line
      end
      
      def footer
        line
        line "-" * 80
        line "generated by Cheatorious (https://github.com/lfcipriani/cheatorious)"
      end
      
      def section_start(section)
        @section_stack.push(section)
        line indentation("-") + " #{section}"
      end
      
      def section_end
        @section_stack.pop
      end
      
      def entry(name, *values)
        e = "#{indentation(" ")} - #{name}: "
        e << values.join(", ")
        line e
      end
      
      def result
        @result
      end
      
    private
    
      def line(str = "")
        @result += str + "\n"
      end
      
      def indentation(char)
        char * 2 * @section_stack.size
      end
    end
  end
end
